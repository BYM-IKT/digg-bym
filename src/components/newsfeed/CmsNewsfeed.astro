---
import type { ImageMetadata } from "astro";
import { getArticleUrl, type CmsMetadata } from "src/lib/cms-api";
import "./newsfeed.css";

interface Props extends CmsMetadata {}

const {
  draft,
  title,
  slug,
  mainImageCaption,
  mainImageUrl,
  //image,
  //severity = "low",
} = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif}"
);
const getColors = (severity: "low" | "medium" | "high" | null) => {
  switch (severity) {
    case "low":
      return { backgroundColor: "inherit", color: "inherit" };
    case "medium":
      return { backgroundColor: "red", color: "white" };
    case "high":
      return { backgroundColor: "black", color: "white" };
    default:
      return { backgroundColor: "inherit", color: "inherit" };
  }
};
const { backgroundColor, color } = getColors(null);
---

<a
  class="newsfeed-post-link newsfeed-post-link-artikkel"
  href={getArticleUrl(slug)}
>
  <div class="newsfeed-post-image-wrapper">
    <img
      class="newsfeed-post-image"
      src={mainImageUrl ?? ""}
      alt={mainImageCaption ?? ""}
    />
    {draft === true && <span class="newsfeed-post-draft">Draft</span>}
  </div>
  <div class="newsfeed-post-heading-wrapper">
    <!--  {
      severity === "high" && (
        <span class="newsfeed-post-severity">Akkurat n√•:</span>
      )
    } -->
    <h2 class="newsfeed-post-heading">{title}</h2>
  </div>
</a>
<style define:vars={{ backgroundColor, color }}>
  .newsfeed-post-link-artikkel {
    background-color: var(--backgroundColor);
    color: var(--color);
  }
  .newsfeed-post-severity {
    font-size: 1.5rem;
  }
</style>
