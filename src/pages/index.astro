---
import {
  PostType,
  type ArtikkelFrontmatter,
  type Frontmatter,
  type LederFrontmatter,
  type MatspaltenFrontmatter,
  type MusikkanmeldelseFrontmatter,
  type ReisebrevFrontmatter,
} from "@interfaces/frontmatter";
import Layout from "@layouts/Layout.astro";
import ArtikkelNewsfeed from "@components/newsfeed/ArtikkelNewsfeed.astro";
import MatspaltenNewsfeed from "@components/newsfeed/MatspaltenNewsfeed.astro";
import ReisebrevNewsfeed from "@components/newsfeed/ReisebrevNewsfeed.astro";
import type { MDXInstance } from "astro";
import LederNewsfeed from "@components/newsfeed/LederNewsfeed.astro";
import MusikkanmeldelseNewsfeed from "@components/newsfeed/MusikkanmeldelseNewsfeed.astro";

const posts = await Astro.glob<Frontmatter>("../pages/posts/*.mdx");
const getUrl = (url?: string) => (url ? url + "/index.html" : undefined);
const filterArticles = (post: MDXInstance<Frontmatter>) => {
  const hasBeenPublished =
    new Date(post.frontmatter.publishedAt).getTime() < new Date().getTime();
  const isInDevelopment = import.meta.env.DEV;

  if (isInDevelopment) return true;
  if (post.frontmatter.draft === true) return false;
  if (!hasBeenPublished) return false;

  return true;
};
---

<Layout title="Digitaliseringsgevinst'n">
  <div class="newsfeed-wrapper">
    <h1 class="sr-only">Digitaliseringsgevinsten - nyheter</h1>
    {
      posts
        .filter(filterArticles)
        .sort(
          (a, b) =>
            new Date(b.frontmatter.publishedAt).getTime() -
            new Date(a.frontmatter.publishedAt).getTime()
        )
        .map((post) => (
          <>
            {post.frontmatter.type === PostType.Artikkel && (
              <ArtikkelNewsfeed
                draft={(post.frontmatter as ArtikkelFrontmatter).draft}
                title={(post.frontmatter as ArtikkelFrontmatter).title}
                summary={(post.frontmatter as ArtikkelFrontmatter).summary}
                author={(post.frontmatter as ArtikkelFrontmatter).author}
                url={getUrl(post.url)}
                image={(post.frontmatter as ArtikkelFrontmatter).image}
                elementsPerRow={
                  (post.frontmatter as ArtikkelFrontmatter).elementsPerRow
                }
              />
            )}
            {post.frontmatter.type === PostType.Matspalten && (
              <MatspaltenNewsfeed
                draft={(post.frontmatter as MatspaltenFrontmatter).draft}
                title={(post.frontmatter as MatspaltenFrontmatter).title}
                summary={(post.frontmatter as MatspaltenFrontmatter).summary}
                author={(post.frontmatter as MatspaltenFrontmatter).author}
                url={getUrl(post.url)}
                image={(post.frontmatter as MatspaltenFrontmatter).image}
                elementsPerRow={
                  (post.frontmatter as MatspaltenFrontmatter).elementsPerRow
                }
              />
            )}
            {post.frontmatter.type === PostType.Reisebrev && (
              <ReisebrevNewsfeed
                draft={(post.frontmatter as ReisebrevFrontmatter).draft}
                title={(post.frontmatter as ReisebrevFrontmatter).title}
                summary={(post.frontmatter as ReisebrevFrontmatter).summary}
                author={(post.frontmatter as ReisebrevFrontmatter).author}
                url={getUrl(post.url)}
                image={(post.frontmatter as ReisebrevFrontmatter).image}
                elementsPerRow={
                  (post.frontmatter as ReisebrevFrontmatter).elementsPerRow
                }
              />
            )}
            {post.frontmatter.type === PostType.Leder && (
              <LederNewsfeed
                draft={(post.frontmatter as LederFrontmatter).draft}
                title={(post.frontmatter as LederFrontmatter).title}
                summary={(post.frontmatter as LederFrontmatter).summary}
                author={(post.frontmatter as LederFrontmatter).author}
                url={getUrl(post.url)}
                image={(post.frontmatter as LederFrontmatter).image}
                elementsPerRow={
                  (post.frontmatter as LederFrontmatter).elementsPerRow
                }
              />
            )}
            {post.frontmatter.type === PostType.Musikkanmeldelse && (
              <MusikkanmeldelseNewsfeed
                draft={(post.frontmatter as MusikkanmeldelseFrontmatter).draft}
                title={(post.frontmatter as MusikkanmeldelseFrontmatter).title}
                summary={
                  (post.frontmatter as MusikkanmeldelseFrontmatter).summary
                }
                author={
                  (post.frontmatter as MusikkanmeldelseFrontmatter).author
                }
                url={getUrl(post.url)}
                image={(post.frontmatter as MusikkanmeldelseFrontmatter).image}
                elementsPerRow={
                  (post.frontmatter as MusikkanmeldelseFrontmatter)
                    .elementsPerRow
                }
              />
            )}
          </>
        ))
    }
  </div>
</Layout>

<style>
  .newsfeed-wrapper {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }
</style>
