---
import ArtikkelNewsfeed from "@components/newsfeed/ArtikkelNewsfeed.astro";
import CmsNewsfeed from "@components/newsfeed/CmsNewsfeed.astro";
import LederNewsfeed from "@components/newsfeed/LederNewsfeed.astro";
import MatspaltenNewsfeed from "@components/newsfeed/MatspaltenNewsfeed.astro";
import MusikkanmeldelseNewsfeed from "@components/newsfeed/MusikkanmeldelseNewsfeed.astro";
import NekrologNewsfeed from "@components/newsfeed/NekrologNewsfeed.astro";
import ReisebrevNewsfeed from "@components/newsfeed/ReisebrevNewsfeed.astro";
import TemaserieNewsfeed from "@components/newsfeed/TemaserieNewsfeed.astro";
import { PostType } from "@interfaces/frontmatter";
import Layout from "@layouts/Layout.astro";

import { getCollection } from "astro:content";
const mdxPosts = await getCollection("mxdPosts");
const cmsPosts = await getCollection("cmsPosts");

const getUrl = (url?: string) => (url ? url + "/index.html" : undefined);
const filterArticles = (publishedDate: string, isDraft: boolean) => {
  const hasBeenPublished =
    new Date(publishedDate).getTime() < new Date().getTime();
  const isInDevelopment = import.meta.env.DEV;

  //if (isInDevelopment) return true;
  if (isDraft === true) return false;
  if (!hasBeenPublished) return false;

  return true;
};

const sortArticles = (ApublishedAt: string, BpublishedAt: string) =>
  new Date(BpublishedAt).getTime() - new Date(ApublishedAt).getTime();
---

<Layout title="Digitaliseringsgevinst'n">
  <div class="newsfeed-wrapper">
    <h1 class="sr-only">Digitaliseringsgevinsten - nyheter</h1>
    {
      cmsPosts
        .filter(({ data }) =>
          filterArticles(data.publishedAt, data.draft ?? false)
        )
        .sort((a, b) => sortArticles(a.data.publishedAt, b.data.publishedAt))
        .map((post) => <CmsNewsfeed {...post.data} />)
    }
    {
      mdxPosts
        .filter(({ data }) =>
          filterArticles(data.publishedAt, data.draft ?? false)
        )
        .sort((a, b) => sortArticles(a.data.publishedAt, b.data.publishedAt))
        .map((post) => (
          <>
            {post.data.type === PostType.Artikkel && (
              <ArtikkelNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
            {post.data.type === PostType.Matspalten && (
              <MatspaltenNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
            {post.data.type === PostType.Reisebrev && (
              <ReisebrevNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
            {post.data.type === PostType.Leder && (
              <LederNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
            {post.data.type === PostType.Musikkanmeldelse && (
              <MusikkanmeldelseNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
            {post.data.type === PostType.Temaserie && (
              <TemaserieNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
            {post.data.type === PostType.Nekrolog && (
              <NekrologNewsfeed {...post.data} url={getUrl(post.id)} />
            )}
          </>
        ))
    }
  </div>
</Layout>

<style>
  .newsfeed-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 1rem;
  }
</style>
