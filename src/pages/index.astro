---
import type { MDXInstance } from "astro";
import {
  PostType,
  type ArtikkelFrontmatter,
  type Frontmatter,
  type LederFrontmatter,
  type MatspaltenFrontmatter,
  type MusikkanmeldelseFrontmatter,
  type NekrologFrontmatter,
  type ReisebrevFrontmatter,
  type TemaserieFrontmatter,
} from "@interfaces/frontmatter";
import Layout from "@layouts/Layout.astro";
import ArtikkelNewsfeed from "@components/newsfeed/ArtikkelNewsfeed.astro";
import MatspaltenNewsfeed from "@components/newsfeed/MatspaltenNewsfeed.astro";
import ReisebrevNewsfeed from "@components/newsfeed/ReisebrevNewsfeed.astro";
import LederNewsfeed from "@components/newsfeed/LederNewsfeed.astro";
import MusikkanmeldelseNewsfeed from "@components/newsfeed/MusikkanmeldelseNewsfeed.astro";
import TemaserieNewsfeed from "@components/newsfeed/TemaserieNewsfeed.astro";
import NekrologNewsfeed from "@components/newsfeed/NekrologNewsfeed.astro";
import { getPosts } from "src/lib/cms-api";
import CmsNewsfeed from "@components/newsfeed/CmsNewsfeed.astro";

const mdxPosts = Object.values(
  import.meta.glob("../pages/posts/*.mdx", { eager: true })
) as MDXInstance<Frontmatter>[];

const cmsPosts = await getPosts();
const getUrl = (url?: string) => (url ? url + "/index.html" : undefined);
const filterArticles = (publishedDate: string, isDraft: boolean) => {
  const hasBeenPublished =
    new Date(publishedDate).getTime() < new Date().getTime();
  const isInDevelopment = import.meta.env.DEV;

  if (isInDevelopment) return true;
  if (isDraft === true) return false;
  if (!hasBeenPublished) return false;

  return true;
};
const sortArticles = (ApublishedAt: string, BpublishedAt: string) =>
  new Date(BpublishedAt).getTime() - new Date(ApublishedAt).getTime();
---

<Layout title="Digitaliseringsgevinst'n">
  <div class="newsfeed-wrapper">
    <h1 class="sr-only">Digitaliseringsgevinsten - nyheter</h1>
    {
      cmsPosts
        .filter(({ frontmatter }) =>
          filterArticles(frontmatter.publishedAt, frontmatter.draft ?? false)
        )
        .sort((a, b) =>
          sortArticles(a.frontmatter.publishedAt, b.frontmatter.publishedAt)
        )
        .map((post) => <CmsNewsfeed {...post.frontmatter} />)
    }
    {
      mdxPosts
        .filter(({ frontmatter }) =>
          filterArticles(frontmatter.publishedAt, frontmatter.draft ?? false)
        )
        .sort((a, b) =>
          sortArticles(a.frontmatter.publishedAt, b.frontmatter.publishedAt)
        )
        .map((post) => (
          <>
            {post.frontmatter.type === PostType.Artikkel && (
              <ArtikkelNewsfeed
                {...(post.frontmatter as ArtikkelFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
            {post.frontmatter.type === PostType.Matspalten && (
              <MatspaltenNewsfeed
                {...(post.frontmatter as MatspaltenFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
            {post.frontmatter.type === PostType.Reisebrev && (
              <ReisebrevNewsfeed
                {...(post.frontmatter as ReisebrevFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
            {post.frontmatter.type === PostType.Leder && (
              <LederNewsfeed
                {...(post.frontmatter as LederFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
            {post.frontmatter.type === PostType.Musikkanmeldelse && (
              <MusikkanmeldelseNewsfeed
                {...(post.frontmatter as MusikkanmeldelseFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
            {post.frontmatter.type === PostType.Temaserie && (
              <TemaserieNewsfeed
                {...(post.frontmatter as TemaserieFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
            {post.frontmatter.type === PostType.Nekrolog && (
              <NekrologNewsfeed
                {...(post.frontmatter as NekrologFrontmatter)}
                url={getUrl(post.url)}
              />
            )}
          </>
        ))
    }
  </div>
</Layout>

<style>
  .newsfeed-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 1rem;
  }
</style>
